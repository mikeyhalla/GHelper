//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GHelper.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.2.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int XpadderStartup {
            get {
                return ((int)(this["XpadderStartup"]));
            }
            set {
                this["XpadderStartup"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Xbox 360 Controller")]
        public string GamepadConnected {
            get {
                return ((string)(this["GamepadConnected"]));
            }
            set {
                this["GamepadConnected"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\\Utilities\\Xpadder\\Controller Profiles\\")]
        public string XpadderProfiles {
            get {
                return ((string)(this["XpadderProfiles"]));
            }
            set {
                this["XpadderProfiles"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\\Utilities\\Xpadder\\Xpadder.exe")]
        public string XpadderLocation {
            get {
                return ((string)(this["XpadderLocation"]));
            }
            set {
                this["XpadderLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Games\\, %PROGRAMDATA%\\Microsoft\\W" +
            "indows\\Start Menu\\Programs\\Games\\")]
        public string GameShortcutsFolder {
            get {
                return ((string)(this["GameShortcutsFolder"]));
            }
            set {
                this["GameShortcutsFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Battlefield 3, Dirty Bomb, EVE Online, Halo 2, StarCraft II, Star Conflict, Path " +
            "of Exile, Wasteland 2, Dota 2, Metro Last Light")]
        public string CustomX {
            get {
                return ((string)(this["CustomX"]));
            }
            set {
                this["CustomX"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"Blacklight Retribution, Call of Duty Black Ops, Call of Duty Black Ops 2, Call of Duty Modern Warfare, Call of Duty Modern Warfare 2, Crysis 2, F.3.A.R, F.E.A.R. 2, Fallout New Vegas, Far Cry 2, Gears of War, Ghost In The Shell - First Assault, Ghost Recon Future Soldier, Ghostbusters - The Video Game, Mass Effect, Mass Effect 2, Mass Effect 3, Max Payne 3, Medal of Honor Warfighter, Paladins, Spec Ops The Line, Syndicate, The Elder Scrolls V Skyrim, World of Warships")]
        public string MouseX {
            get {
                return ((string)(this["MouseX"]));
            }
            set {
                this["MouseX"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("12/21/2017 22:00:00")]
        public global::System.DateTime StopGamingTimer {
            get {
                return ((global::System.DateTime)(this["StopGamingTimer"]));
            }
            set {
                this["StopGamingTimer"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool StopGamingReminder {
            get {
                return ((bool)(this["StopGamingReminder"]));
            }
            set {
                this["StopGamingReminder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Alarm10.wav")]
        public string AlarmSound {
            get {
                return ((string)(this["AlarmSound"]));
            }
            set {
                this["AlarmSound"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool XpadderStartupEnabled {
            get {
                return ((bool)(this["XpadderStartupEnabled"]));
            }
            set {
                this["XpadderStartupEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" />")]
        public global::System.Collections.Specialized.StringCollection StartWithGame {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["StartWithGame"]));
            }
            set {
                this["StartWithGame"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool GamePadDetection {
            get {
                return ((bool)(this["GamePadDetection"]));
            }
            set {
                this["GamePadDetection"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UpgradeRequired {
            get {
                return ((bool)(this["UpgradeRequired"]));
            }
            set {
                this["UpgradeRequired"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int StartupRequest {
            get {
                return ((int)(this["StartupRequest"]));
            }
            set {
                this["StartupRequest"] = value;
            }
        }
    }
}
